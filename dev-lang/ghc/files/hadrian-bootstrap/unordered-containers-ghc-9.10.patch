--- a/unordered-containers.cabal	2024-08-31 12:57:40.847993713 +0200
+++ b/unordered-containers.cabal	2024-08-31 12:57:56.695833860 +0200
@@ -55,7 +55,7 @@
     Data.HashSet.Internal
 
   build-depends:
-    base >= 4.9 && < 4.20,
+    base >= 4.9 && < 4.21,
     deepseq >= 1.1,
     hashable >= 1.0.1.1 && < 1.5
 
--- a/Data/HashMap/Internal/Array.hs	2001-09-09 03:46:40.000000000 +0200
+++ b/Data/HashMap/Internal/Array.hs	2024-08-31 13:23:45.151798415 +0200
@@ -77,7 +77,7 @@
 import GHC.ST (ST(..))
 import Control.Monad.ST (runST, stToIO)

-import Prelude hiding (filter, foldMap, foldr, foldl, length, map, read, traverse, all)
+import Prelude hiding (filter, foldMap, foldr, foldl, foldl', length, map, read, traverse, all)

 import GHC.Exts (SmallArray#, newSmallArray#, readSmallArray#, writeSmallArray#,
                  indexSmallArray#, unsafeFreezeSmallArray#, unsafeThawSmallArray#,
--- a/Data/HashMap/Internal.hs	2001-09-09 03:46:40.000000000 +0200
+++ b/Data/HashMap/Internal.hs	2024-08-31 13:27:02.541733537 +0200
@@ -150,7 +150,7 @@
 #endif
 import qualified Data.List as L
 import GHC.Exts ((==#), build, reallyUnsafePtrEquality#, inline)
-import Prelude hiding (filter, foldl, foldr, lookup, map, null, pred)
+import Prelude hiding (filter, foldl, foldl', foldr, lookup, map, null, pred)
 import Text.Read hiding (step)

 import qualified Data.HashMap.Internal.Array as A
--- a/Data/HashSet/Internal.hs	2024-08-31 13:29:22.684142976 +0200
+++ b/Data/HashSet/Internal.hs	2024-08-31 13:29:16.376215850 +0200
@@ -100,7 +100,7 @@
 #endif
 import GHC.Exts (build)
 import qualified GHC.Exts as Exts
-import Prelude hiding (filter, foldr, foldl, map, null)
+import Prelude hiding (filter, foldr, foldl, foldl', map, null)
 import qualified Data.Foldable as Foldable
 import qualified Data.HashMap.Internal as H
 import qualified Data.List as List
--- a/Data/HashMap/Internal/Strict.hs	2001-09-09 03:46:40.000000000 +0200
+++ b/Data/HashMap/Internal/Strict.hs	2024-08-31 13:32:24.774067205 +0200
@@ -123,7 +123,7 @@

 import qualified Data.List as L
 import Data.Hashable (Hashable)
-import Prelude hiding (map, lookup)
+import Prelude hiding (foldl', map, lookup)

 import qualified Data.HashMap.Internal.Array as A
 import qualified Data.HashMap.Internal as HM
